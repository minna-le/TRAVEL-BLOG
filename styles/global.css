html,
body {
  /* prevent horizontal scroll */
  overflow-x: hidden;
  margin: 0;
  padding: 0;
  /* ensure padding, borders included in width, height calculation */
  box-sizing: border-box;
  background-color: whitesmoke;
}
html * {
  box-sizing: border-box;
}
:root {
  --paragraph-sans: "Open Sans", sans-serif;
  --heading-sans: "Hind", san-serif;
}
body {
  line-height: 1.6;
}

.headerNav {
  display: flex;
  justify-content: space-between;
  align-items: center;
  width: 100%;
  background-color: black;
  position: fixed;
  height: 60px;
}
.logo {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  height: 100%;
  margin: 20px;
  text-align: center;
}
.logo,
.navbar,
.dropbtn,
.search-box::placeholder {
  font-family: var(--heading-sans);
  font-weight: 600;
}

.logo a {
  text-decoration: none;
  color: white;
}

.logo-h1 {
  font-size: 16px;
  margin-bottom: 0;
}
.logo-p {
  margin-top: 0;
  font-size: 10px;
  color: rgb(233, 231, 231);
}
.navbar {
  display: flex;
  padding-right: 40px;
  height: 100%;
}

.navbar a {
  text-decoration: none;
  color: white;
}

.mystory-header,
.blogs-header,
.dropdown,
.search-container {
  display: flex;
  border-left: 2px solid white;
  align-items: center;
  padding-left: 20px;
  padding-right: 20px;
  height: 100%;
}

.overlay-image {
  height: 100%;
  overflow: hidden;
  position: relative;
  .main-title {
    position: absolute;
    bottom: 64px;
    left: calc((100vw - 1500px) / 2 - 6px);
    /* 
    calculate value for left based on logic of the math behind max-width and margin: 0 auto
    100vw - 1500px (max-width) = total horizontal margin
    margin 0 auto = total horizontal margin / 2
    - 6px for the scroll bar ðŸ¤·
    note that this obviously won't work correctly if 100vh < 1500px
    come up with a better solution if you can
    */
    .button-lets-go {
      color: white;
      width: 128px;
      height: 48px;
      border: 1px solid #f3f2f1;
      display: flex;
      align-content: center;
    }
    h1 {
      margin: 0;
      color: white;
      font-size: 128px;
      font-weight: 600;
      opacity: 0.75;
      line-height: 1.25;
    }
  }
}
.overlay-image img {
  width: 100%;
  /* Background image cover all screen height */
  height: auto;
  /* ensure image cover entair container without being distorted  */
  object-fit: cover;
  /* prevent unwanted inline bahavior of image */
  display: block;
}

.dropbtn {
  text-decoration: none;
  border: none;
  background-color: inherit;
  font-size: 16px;
  padding-left: 0;
  padding-right: 0;
  color: white;
}

.navbar a:hover,
.dropdown:hover .dropbtn {
  color: grey;
}
.dropdown {
  /* father of dropdown-content (positioned accord to father) */
  position: relative;
}
.dropdown-content {
  background-color: black;
  /* hide dropdown content by default */
  display: none;
  width: 100%;
  /* make content appear below dropdown button */
  position: absolute;
  top: 100%;
  left: 0;
  /* make sure padding and border are included in total width */
}
.dropdown-content a {
  /* start with new line */
  display: block;
  color: white;
  padding: 10px;
}
.dropdown:hover .dropdown-content {
  /* without this, display: none for content */
  display: block;
  padding: 12px;
  text-align: left;
}
.search-container {
  border-radius: 4px;
  padding-left: 20px;
  padding-right: 20px;
}
.search-box {
  background-color: black;
  color: white;
  height: 100%;
  font-family: var(--heading-sans);
  font-weight: 600;
  border: none;
}
.search-box-wrapper {
  display: flex;
  align-items: center;
  border: 1px solid rgb(196, 195, 195); /* Smaller white border around the search box */
  border-radius: 4px;
  padding-left: 6px;
  padding-right: 6px;
  height: 30px; /* Adjust the height to be smaller than the header */
}
.search-btn {
  background-color: black; /* Match with navbar */
  border: none;
  color: rgb(201, 196, 196);
  cursor: pointer;
}
.search-box::placeholder {
  color: rgb(201, 196, 196);
}
.search-box:focus {
  /* remove default OUTLINE when input field is actively selected by user (focus) */

  outline: none;
}
.search-btn:hover {
  cursor: pointer;
}
